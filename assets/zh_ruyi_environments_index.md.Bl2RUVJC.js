import{_ as t,c as e,o as s,a4 as i}from"./chunks/framework.DkV6eWGR.js";const y=JSON.parse('{"title":"RUYI 编译环境","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ruyi/environments/index.md","filePath":"zh/ruyi/environments/index.md","lastUpdated":1709825864000}'),a={name:"zh/ruyi/environments/index.md"},n=i(`<h1 id="ruyi-编译环境" tabindex="-1">RUYI 编译环境 <a class="header-anchor" href="#ruyi-编译环境" aria-label="Permalink to &quot;RUYI 编译环境&quot;">​</a></h1><p>RUYI 包管理器使用 <code>venv</code> 命令应用配置到指定的工具链以建立编译环境。这和 python 的虚拟环境类似。</p><p>RUYI 包管理预置的配置可以使用 <code>list profiles</code> 命令查看</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> profiles</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sipeed-lpi4a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (needs </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">flavor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {&#39;xthead&#39;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">milkv-duo</span></span></code></pre></div><h2 id="工具链与预置配置组合" tabindex="-1">工具链与预置配置组合 <a class="header-anchor" href="#工具链与预置配置组合" aria-label="Permalink to &quot;工具链与预置配置组合&quot;">​</a></h2><p>RUYI 包管理在建立编译环境之前会检查该环境是否合法，但是并不保证建立成功的环境一定可用于构建。</p><p>这里列出了经过测试可用的配置组合：</p><table><thead><tr><th style="text-align:center;">工具链</th><th style="text-align:center;">sysroot</th><th style="text-align:center;">预置配置</th></tr></thead><tbody><tr><td style="text-align:center;">gnu-upstream</td><td style="text-align:center;">自带</td><td style="text-align:center;">generic</td></tr><tr><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">自带</td><td style="text-align:center;">generic</td></tr><tr><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">自带</td><td style="text-align:center;">milkv-duo</td></tr><tr><td style="text-align:center;">gnu-plct-xthead</td><td style="text-align:center;">自带</td><td style="text-align:center;">sipeed-lpi4a</td></tr><tr><td style="text-align:center;">llvm-upstream</td><td style="text-align:center;">gnu-upstream</td><td style="text-align:center;">generic</td></tr><tr><td style="text-align:center;">llvm-upstream</td><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">generic</td></tr></tbody></table>`,8),l=[n];function r(d,h,p,c,o,g){return s(),e("div",null,l)}const u=t(a,[["render",r]]);export{y as __pageData,u as default};
